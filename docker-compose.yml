version: '3.8'

services:
    # krakend:
    #     # image: devopsfaith/krakend:latest
    #     build:
    #         context: ./gw
    #         dockerfile: Dockerfile
    #     container_name: ${CONTAINER_ID_NAME?Variable not set}-krakend
    #     # command: run -d -c /etc/krakend/krakend.json
    #     restart: unless-stopped
    #     ports:
    #         - ${KRAKEND_PORT?Variable not set}:8080
    #     volumes:
    #         - ./gw:/etc/krakend
    #         # - ./data/krakend:/etc/krakend

    # two tables with two user for keycloak and API
    keycloak-db:
        image: postgres:latest
        container_name: ${CONTAINER_ID_NAME?Variable not set}-keycloak-db
        restart: unless-stopped
        volumes:
            - postgre_data:/var/lib/postgresql/data
            - ./data/postgres:/docker-entrypoint-initdb.d
        ports:
            - ${POSTGRES_DB_EXPOSE_PORT?Variable not set}:${POSTGRES_DB_PORT?Variable not set} # expose to 5434
        environment:
            POSTGRES_DB: ${KEYCLOAK_DB_DATABASE?Variable not set}
            POSTGRES_USER: ${KEYCLOAK_DB_USER?Variable not set}
            POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD?Variable not set}
            POSTGRES_DB_API: ${POSTGRES_DB_API?Variable not set}
            POSTGRES_DB_API_USER: ${POSTGRES_DB_API_USER?Variable not set}
            POSTGRES_DB_API_PASSWORD: ${POSTGRES_DB_API_PASSWORD?Variable not set}
            TZ: 'Asia/Jakarta' # Add timezone

    manage:
        build:
            context: ./be/services/manage
            dockerfile: Dockerfile
        # image: registry.gitlab.com/ihsansolusi/universal-front-end/manage
        container_name: ${CONTAINER_ID_NAME?Variable not set}-unife-manage
        volumes:
            - ./services/manage:/app
        restart: unless-stopped
        #command: tail -f /dev/null
        command: /start-reload.sh
        ports:
            - ${API_HTTP_EXPOSE_PORT_MANAGE?Variable not set}:${API_HTTP_PORT?Variable not set}
        environment:
            - PROJECT_NAME=${PROJECT_NAME?Variable not set}
            # DB variable on app/config.py
            - POSTGRES_DB_SERVER=${POSTGRES_DB_SERVER?Variable not set}
            - POSTGRES_DB_PORT=${POSTGRES_DB_PORT?Variable not set}
            - POSTGRES_DB_EXPOSE_PORT=${POSTGRES_DB_EXPOSE_PORT?Variable not set}
            - POSTGRES_DB_API=${POSTGRES_DB_API?Variable not set}
            - POSTGRES_DB_API_USER=${POSTGRES_DB_API_USER?Variable not set}
            - POSTGRES_DB_API_PASSWORD=${POSTGRES_DB_API_PASSWORD?Variable not set}
            # DB TEST variable on app/config.py
            - POSTGRES_DB_SERVER_TEST=${POSTGRES_DB_SERVER_TEST?Variable not set}
            - POSTGRES_DB_API_TEST=${POSTGRES_DB_API_TEST?Variable not set}
            - POSTGRES_DB_API_USER_TEST=${POSTGRES_DB_API_USER_TEST?Variable not set}
            - POSTGRES_DB_API_PASSWORD_TEST=${POSTGRES_DB_API_PASSWORD_TEST?Variable not set}
            # api variable on app/config.py
            - API_HTTP_PORT=${API_HTTP_PORT?Variable not set}
            - API_VERSION=${API_VERSION?Variable not set}
            - PROXY_ROOT_PATH=${PROXY_ROOT_PATH?Variable not set}
            # GCP Storage
            # - BUCKET_NAME=${BUCKET_NAME?Variable not set}
            # KEYCLOAK
            # - SERVICE_KEYCLOAK_URL=${SERVICE_KEYCLOAK_URL?Variable not set}
            # - SERVICE_KEYCLOAK_REALM=${SERVICE_KEYCLOAK_REALM?Variable not set}
            # - SERVICE_KEYCLOAK_CLIENT_ID=${SERVICE_KEYCLOAK_CLIENT_ID?Variable not set}
            # - SERVICE_KEYCLOAK_USERNAME=${SERVICE_KEYCLOAK_USERNAME?Variable not set}
            # - SERVICE_KEYCLOAK_PASSWORD=${SERVICE_KEYCLOAK_PASSWORD?Variable not set}


volumes:
    postgre_data:

networks:
    default:
        external:
            name: ${PROJECT_NETWORK?Variable not set}

